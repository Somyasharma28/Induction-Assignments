AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  Cloud Assignment 1
  

Resources:
#Lambda Functions
  CloudAssignemnt1Function1:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CloudAssignemnt1Function1-Somya
      CodeUri: CloudAssignemnt1Function1/
      Description: Lambda for Cloud Assignemnt1
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Environment:
        Variables:
          UserTable: !Ref CloudAssignemnt1Table
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref CloudAssignemnt1Table
      
  CloudAssignemnt1Function2:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CloudAssignemnt1Function2-Somya
      CodeUri: CloudAssignemnt1Function2/
      Description: Lambda for Cloud Assignemnt1
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Environment:
        Variables:
          UserTable: !Ref CloudAssignemnt1Table
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref CloudAssignemnt1Table
      
#Tables
  CloudAssignemnt1Table:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CloudAssignemnt1Table-Somya
      AttributeDefinitions:
        - 
          AttributeName: "username"
          AttributeType: "S"
        - 
          AttributeName: "password"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "username"
          KeyType: "HASH"
        - 
          AttributeName: "password"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"

#API
  CloudAssignment1API:
    Type: AWS::Serverless::Api
    Properties:
      Name: CloudAssignment1API-Somya
      StageName: Dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: CloudAssignment1API/swagger.yaml

#IAM Role
  CloudAssignment1Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: MyLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt CloudAssignemnt1Function1.Arn
                  - !GetAtt CloudAssignemnt1Function2.Arn
 



         
